<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registro de Usuario | NeoForm</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <style>
    :root {
      --primary-bg: #2c3e50;
      --secondary-bg: #2c3e50;
      --accent-color: #15a086;
      --accent-hover: #2ce8c9;
      --text-light: #e0f2fe;
      --text-dark: #0f172a;
      --card-bg: rgba(26, 36, 51, 0.8);
      --glow: 0 0 15px rgba(21, 160, 134, 0.7);
      --border-radius: 16px;
      --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      --panel-width: 650px;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Roboto', sans-serif;
      background-color: var(--primary-bg);
      color: var(--text-light);
      margin: 0;
      padding: 0;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background-image: 
        radial-gradient(circle at 20% 30%, rgba(21, 160, 134, 0.15) 0%, transparent 25%),
        radial-gradient(circle at 80% 70%, rgba(21, 160, 134, 0.15) 0%, transparent 25%);
      overflow-x: hidden;
      position: relative;
    }

    /* Efectos de fondo futurista */
    .grid-lines {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        linear-gradient(to right, rgba(21, 160, 134, 0.03) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(21, 160, 134, 0.03) 1px, transparent 1px);
      background-size: 40px 40px;
      z-index: -1;
    }

    .particle {
      position: absolute;
      background: rgba(21, 160, 134, 0.5);
      border-radius: 50%;
      z-index: -1;
      animation: float 15s infinite linear;
    }

    @keyframes float {
      0% { transform: translateY(0) translateX(0); opacity: 0; }
      50% { opacity: 0.8; }
      100% { transform: translateY(-100vh) translateX(100px); opacity: 0; }
    }

    /* Contenedor principal */
    .multi-step-form {
      width: 95%;
      max-width: var(--panel-width);
      background-color: var(--card-bg);
      border-radius: var(--border-radius);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
      overflow: hidden;
      position: relative;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(21, 160, 134, 0.3);
    }

    /* Barra de progreso */
    .progress-bar {
      display: flex;
      height: 6px;
      background-color: rgba(21, 160, 134, 0.2);
      position: relative;
    }

    .progress-step {
      flex: 1;
      height: 100%;
      position: relative;
    }

    .progress-step.active {
      background-color: var(--accent-color);
      box-shadow: var(--glow);
    }

    .progress-step.completed {
      background-color: var(--accent-color);
    }

    /* Encabezado */
    .form-header {
      padding: 25px 30px;
      text-align: center;
      position: relative;
    }

    .form-header h2 {
      font-family: 'Orbitron', sans-serif;
      font-weight: 700;
      font-size: 1.8rem;
      letter-spacing: 1px;
      margin-bottom: 10px;
      color: var(--text-light);
      text-shadow: 0 0 10px rgba(224, 242, 254, 0.3);
    }

    .form-header p {
      color: rgba(224, 242, 254, 0.7);
      font-size: 0.9rem;
    }

    /* Secciones del formulario */
    .form-section {
      padding: 30px;
      display: none;
      animation: fadeIn 0.5s ease-out;
    }

    .form-section.active {
      display: block;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .section-title {
      font-family: 'Orbitron', sans-serif;
      font-weight: 500;
      font-size: 1.3rem;
      margin-bottom: 20px;
      color: var(--accent-hover);
      display: flex;
      align-items: center;
    }

    .section-title i {
      margin-right: 10px;
      font-size: 1.2rem;
    }

    /* Campos del formulario */
    .form-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
    }

    .form-group {
      position: relative;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-size: 0.85rem;
      color: rgba(224, 242, 254, 0.8);
      font-weight: 300;
    }

    .form-control {
      width: 100%;
      padding: 12px 15px;
      background-color: rgba(15, 22, 33, 0.5);
      border: 1px solid rgba(21, 160, 134, 0.3);
      border-radius: 8px;
      color: var(--text-light);
      font-family: 'Roboto', sans-serif;
      transition: var(--transition);
    }

    .form-control:focus {
      outline: none;
      border-color: var(--accent-color);
      box-shadow: var(--glow);
    }

    select.form-control {
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 24 24' fill='none' stroke='%2315a086' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right 15px center;
    }

    /* Upload de imagen */
    .file-upload {
      display: flex;
      flex-direction: column;
      align-items: center;
      grid-column: 1 / -1;
      margin-top: 15px;
    }

    .file-input {
      display: none;
    }

    .file-label {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--accent-color);
      color: var(--text-light);
      padding: 12px 25px;
      border-radius: 8px;
      cursor: pointer;
      transition: var(--transition);
      font-weight: 500;
      border: none;
      font-family: 'Orbitron', sans-serif;
      letter-spacing: 1px;
      text-transform: uppercase;
      font-size: 0.8rem;
    }

    .file-label:hover {
      background-color: var(--accent-hover);
      transform: translateY(-3px);
      box-shadow: var(--glow);
    }

    .preview-container {
      margin-top: 20px;
      position: relative;
      width: 120px;
      height: 120px;
      border-radius: 50%;
      border: 3px solid var(--accent-color);
      overflow: hidden;
      box-shadow: var(--glow);
      display: none;
    }

    .preview-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    /* Botones de navegación */
    .form-navigation {
      display: flex;
      justify-content: space-between;
      margin-top: 30px;
      padding-top: 20px;
      border-top: 1px solid rgba(21, 160, 134, 0.2);
    }

    .btn {
      padding: 12px 25px;
      border-radius: 8px;
      cursor: pointer;
      transition: var(--transition);
      font-family: 'Orbitron', sans-serif;
      font-weight: 500;
      letter-spacing: 1px;
      text-transform: uppercase;
      font-size: 0.8rem;
      border: none;
    }

    .btn-prev {
      background-color: transparent;
      color: var(--accent-color);
      border: 1px solid var(--accent-color);
    }

    .btn-prev:hover {
      background-color: rgba(21, 160, 134, 0.1);
      box-shadow: var(--glow);
    }

    .btn-next, .btn-submit {
      background-color: var(--accent-color);
      color: var(--text-dark);
    }

    .btn-next:hover, .btn-submit:hover {
      background-color: var(--accent-hover);
      transform: translateY(-3px);
      box-shadow: var(--glow);
    }

    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none !important;
      box-shadow: none !important;
    }

    /* Sección de confirmación */
    .confirmation-section {
      text-align: center;
      padding: 40px 30px;
    }

    .confirmation-icon {
      font-size: 80px;
      color: var(--accent-color);
      margin-bottom: 20px;
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }

    .confirmation-message {
      font-size: 1.2rem;
      margin-bottom: 30px;
      line-height: 1.6;
    }

    .confirmation-details {
      background-color: rgba(15, 22, 33, 0.5);
      border-radius: var(--border-radius);
      padding: 20px;
      margin-bottom: 30px;
      text-align: left;
      border-left: 3px solid var(--accent-color);
    }

    .detail-item {
      margin-bottom: 10px;
      display: flex;
    }

    .detail-label {
      font-weight: 500;
      color: var(--accent-color);
      min-width: 120px;
    }

    .btn-continue {
      background-color: var(--accent-color);
      color: var(--text-dark);
      padding: 15px 40px;
      font-size: 1rem;
      border-radius: 50px;
      text-decoration: none;
      display: inline-block;
      transition: var(--transition);
      font-family: 'Orbitron', sans-serif;
    }

    .btn-continue:hover {
      background-color: var(--accent-hover);
      transform: translateY(-3px);
      box-shadow: var(--glow);
    }

    /* Efectos de carga */
    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(15, 22, 33, 0.8);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
      backdrop-filter: blur(5px);
    }

    .loading-content {
      text-align: center;
    }

    .loading-spinner {
      width: 60px;
      height: 60px;
      border: 5px solid rgba(21, 160, 134, 0.2);
      border-top-color: var(--accent-color);
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 20px;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .loading-text {
      font-family: 'Orbitron', sans-serif;
      color: var(--accent-color);
      letter-spacing: 2px;
      font-size: 1.2rem;
      margin-top: 20px;
    }

    .loading-dots {
      display: inline-block;
      animation: dots 1.5s infinite;
    }

    @keyframes dots {
      0%, 20% { content: '.'; }
      40% { content: '..'; }
      60%, 100% { content: '...'; }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .form-grid {
        grid-template-columns: 1fr;
      }
      
      .form-section {
        padding: 25px 20px;
      }
      
      .form-header h2 {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <!-- Efectos de fondo -->
  <div class="grid-lines"></div>
  <div id="particles"></div>

  <!-- Formulario multi-pasos -->
  <div class="multi-step-form">
    <!-- Barra de progreso -->
    <div class="progress-bar">
      <div class="progress-step active" data-step="1"></div>
      <div class="progress-step" data-step="2"></div>
      <div class="progress-step" data-step="3"></div>
      <div class="progress-step" data-step="4"></div>
    </div>

    <!-- Encabezado -->
    <div class="form-header">
      <h2>REGISTRA NUEVA CUENTA</h2>
      <p>Complete su perfil en nuestro sistema futurista</p>
    </div>

    <!-- Sección 1: Información personal -->
    <div class="form-section active" id="section-1">
      <div class="section-title">
        <i class="fas fa-user-astronaut"></i> INFORMACIÓN PERSONAL
      </div>
      <div class="form-grid">
        <div class="form-group">
          <label for="registerName">NOMBRE COMPLETO</label>
          <input type="text" id="registerName" class="form-control" placeholder="Ingrese su nombre" required>
        </div>
        <div class="form-group">
          <label for="registerCedula">CÉDULA DE IDENTIDAD</label>
          <input type="text" id="registerCedula" class="form-control" placeholder="Ej: 12345678" required>
        </div>
        <div class="form-group">
          <label for="registerSexo">GÉNERO</label>
          <select id="registerSexo" class="form-control" required>
            <option value="" disabled selected>SELECCIONE</option>
            <option value="masculino">MASCULINO</option>
            <option value="femenino">FEMENINO</option>
            <option value="otro">OTRO</option>
          </select>
        </div>
        <div class="form-group">
          <label for="registerFechaNacimiento">FECHA DE NACIMIENTO</label>
          <input type="date" id="registerFechaNacimiento" class="form-control" required>
        </div>
      </div>
      <div class="form-navigation">
        <button class="btn btn-prev" disabled><i class="fas fa-arrow-left"></i> ANTERIOR</button>
        <button class="btn btn-next" data-next="2">SIGUIENTE <i class="fas fa-arrow-right"></i></button>
      </div>
    </div>

    <!-- Sección 2: Información laboral -->
    <div class="form-section" id="section-2">
      <div class="section-title">
        <i class="fas fa-briefcase"></i> INFORMACIÓN LABORAL
      </div>
      <div class="form-grid">
        <div class="form-group">
          <label for="registerCodigoLaboral">CÓDIGO LABORAL</label>
          <input type="text" id="registerCodigoLaboral" class="form-control" placeholder="ID de empleado" required>
        </div>
        <div class="form-group">
          <label for="registerEmpresa">EMPRESA</label>
          <input type="text" id="registerEmpresa" class="form-control" placeholder="Nombre de la empresa" required>
        </div>
        <div class="form-group">
          <label for="registerDepartamento">DEPARTAMENTO</label>
          <input type="text" id="registerDepartamento" class="form-control" placeholder="Área de trabajo" required>
        </div>
        <div class="form-group">
          <label for="registerAreaTrabajo">ÁREA ESPECÍFICA</label>
          <input type="text" id="registerAreaTrabajo" class="form-control" placeholder="Especialización" required>
        </div>
        <div class="form-group">
          <label for="registerPosicion">POSICIÓN</label>
          <input type="text" id="registerPosicion" class="form-control" placeholder="Cargo actual" required>
        </div>
        <div class="form-group">
          <label for="registerUbicacion">UBICACIÓN</label>
          <input type="text" id="registerUbicacion" class="form-control" placeholder="Sede/oficina" required>
        </div>
      </div>
      <div class="form-navigation">
        <button class="btn btn-prev" data-prev="1"><i class="fas fa-arrow-left"></i> ANTERIOR</button>
        <button class="btn btn-next" data-next="3">SIGUIENTE <i class="fas fa-arrow-right"></i></button>
      </div>
    </div>

    <!-- Sección 3: Contacto y credenciales -->
    <div class="form-section" id="section-3">
      <div class="section-title">
        <i class="fas fa-id-card"></i> CONTACTO Y CREDENCIALES
      </div>
      <div class="form-grid">
        <div class="form-group">
          <label for="registerEmail">CORREO ELECTRÓNICO</label>
          <input type="email" id="registerEmail" class="form-control" placeholder="ejemplo@empresa.com" required>
        </div>
        <div class="form-group">
          <label for="registerPhone">TELÉFONO</label>
          <input type="tel" id="registerPhone" class="form-control" placeholder="Número de contacto" required>
        </div>
        <div class="form-group">
          <label for="registerPassword">CONTRASEÑA</label>
          <input type="password" id="registerPassword" class="form-control" placeholder="Mínimo 8 caracteres" required>
        </div>
        <div class="form-group">
          <label for="registerConfirmPassword">CONFIRMAR CONTRASEÑA</label>
          <input type="password" id="registerConfirmPassword" class="form-control" placeholder="Repita su contraseña" required>
        </div>
        <div class="form-group">
          <label for="registerTipoUsuario">TIPO DE USUARIO</label>
          <select id="registerTipoUsuario" class="form-control" required>
            <option value="" disabled selected>SELECCIONE</option>
            <option value="admin">ADMINISTRADOR</option>
            <option value="estandar">USUARIO ESTÁNDAR</option>
          </select>
        </div>
        <div class="file-upload">
          <label for="registerPhoto" class="file-label">
            <i class="fas fa-camera"></i> SELECCIONAR FOTO DE PERFIL
          </label>
          <input type="file" id="registerPhoto" class="file-input" accept="image/*">
          <div class="preview-container" id="previewContainer">
            <img id="preview" class="preview-image" src="#" alt="Vista previa">
          </div>
        </div>
      </div>
      <div class="form-navigation">
        <button class="btn btn-prev" data-prev="2"><i class="fas fa-arrow-left"></i> ANTERIOR</button>
        <button class="btn btn-next" data-next="4">REVISAR <i class="fas fa-check-circle"></i></button>
      </div>
    </div>

    <!-- Sección 4: Confirmación -->
    <div class="form-section" id="section-4">
      <div class="section-title">
        <i class="fas fa-clipboard-check"></i> CONFIRMACIÓN
      </div>
      <div class="form-grid">
        <div class="form-group">
          <h3 style="color: var(--accent-color); margin-bottom: 15px;">REVISE SUS DATOS</h3>
          <div id="confirmationData" class="confirmation-details">
            <!-- Los datos se insertarán aquí mediante JavaScript -->
          </div>
        </div>
      </div>
      <div class="form-navigation">
        <button class="btn btn-prev" data-prev="3"><i class="fas fa-arrow-left"></i> ANTERIOR</button>
        <button class="btn btn-submit" id="submitForm"><i class="fas fa-paper-plane"></i> ENVIAR REGISTRO</button>
      </div>
    </div>

    <!-- Sección 5: Éxito (oculta inicialmente) -->
    <div class="form-section confirmation-section" id="section-5" style="display: none;">
      <div class="confirmation-icon">
        <i class="fas fa-check-circle"></i>
      </div>
      <h2 style="font-family: 'Orbitron', sans-serif; color: var(--accent-hover); margin-bottom: 20px;">REGISTRO EXITOSO</h2>
      <div class="confirmation-message">
        <p>¡Bienvenido al sistema!</p>
        <p>Tu registro se ha completado satisfactoriamente.</p>
      </div>
      <div id="successDetails" class="confirmation-details">
        <!-- Datos del usuario registrado -->
      </div>
      <a href="bienvenido.html" class="btn-continue">
        CONTINUAR AL SISTEMA <i class="fas fa-arrow-right"></i>
      </a>
    </div>
  </div>

  <!-- Overlay de carga -->
  <div class="loading-overlay" id="loadingOverlay" style="display: none;">
    <div class="loading-content">
      <div class="loading-spinner"></div>
      <div class="loading-text">PROCESANDO REGISTRO<span class="loading-dots"></span></div>
    </div>
  </div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js";
    import { getAuth, createUserWithEmailAndPassword, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js";
    import { getFirestore, collection, doc, setDoc, getDocs, getDoc } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";
    import { getStorage, ref, uploadBytes, getDownloadURL } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-storage.js";

    // Configuración de Firebase
    const firebaseConfig = {
      apiKey: "AIzaSyDLi-egzQlgbKW8XV_qIhU6313Gd8gocCg",
      authDomain: "inventario-35d6b.firebaseapp.com",
      databaseURL: "https://inventario-35d6b-default-rtdb.firebaseio.com",
      projectId: "inventario-35d6b",
      storageBucket: "inventario-35d6b.appspot.com",
      messagingSenderId: "266100399659",
      appId: "1:266100399659:web:92358d28cbd803c8a7d46e"
    };

    // Inicializar Firebase
    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const db = getFirestore(app);
    const storage = getStorage(app);

    // ====================
    // FUNCIONALIDAD DEL UI
    // ====================

    // Crear partículas de fondo
    function createParticles() {
      const container = document.getElementById('particles');
      const particleCount = 20;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        // Tamaño y posición aleatorios
        const size = Math.random() * 10 + 5;
        const posX = Math.random() * 100;
        const posY = Math.random() * 100 + 100;
        const delay = Math.random() * 15;
        const duration = Math.random() * 20 + 10;
        
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        particle.style.left = `${posX}%`;
        particle.style.top = `${posY}%`;
        particle.style.animationDelay = `${delay}s`;
        particle.style.animationDuration = `${duration}s`;
        
        container.appendChild(particle);
      }
    }

    // Navegación entre secciones
    function setupNavigation() {
      // Botones Siguiente
      document.querySelectorAll('.btn-next').forEach(button => {
        button.addEventListener('click', (e) => {
          e.preventDefault();
          const nextSection = button.getAttribute('data-next');
          goToSection(nextSection);
        });
      });
      
      // Botones Anterior
      document.querySelectorAll('.btn-prev').forEach(button => {
        button.addEventListener('click', (e) => {
          e.preventDefault();
          const prevSection = button.getAttribute('data-prev');
          goToSection(prevSection);
        });
      });
    }

    // Ir a una sección específica
    function goToSection(sectionNumber) {
      // Ocultar todas las secciones
      document.querySelectorAll('.form-section').forEach(section => {
        section.classList.remove('active');
      });
      
      // Mostrar la sección seleccionada
      document.getElementById(`section-${sectionNumber}`).classList.add('active');
      
      // Actualizar la barra de progreso
      updateProgressBar(sectionNumber);
    }

    // Actualizar barra de progreso
    function updateProgressBar(currentStep) {
      const steps = document.querySelectorAll('.progress-step');
      
      steps.forEach((step, index) => {
        if (index < currentStep - 1) {
          step.classList.add('completed');
          step.classList.remove('active');
        } else if (index === currentStep - 1) {
          step.classList.add('active');
          step.classList.remove('completed');
        } else {
          step.classList.remove('active', 'completed');
        }
      });
    }

    // Vista previa de la imagen
    function setupImagePreview() {
      const fileInput = document.getElementById('registerPhoto');
      const previewContainer = document.getElementById('previewContainer');
      
      fileInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function(e) {
            const preview = document.getElementById('preview');
            preview.src = e.target.result;
            previewContainer.style.display = 'block';
          };
          reader.readAsDataURL(file);
        }
      });
    }

    // Mostrar datos de confirmación
    function showConfirmationData() {
      const confirmationDiv = document.getElementById('confirmationData');
      let html = '';
      
      // Obtener todos los valores del formulario
      const formData = {
        'Nombre Completo': document.getElementById('registerName').value,
        'Cédula': document.getElementById('registerCedula').value,
        'Género': document.getElementById('registerSexo').value,
        'Fecha Nacimiento': document.getElementById('registerFechaNacimiento').value,
        'Código Laboral': document.getElementById('registerCodigoLaboral').value,
        'Empresa': document.getElementById('registerEmpresa').value,
        'Departamento': document.getElementById('registerDepartamento').value,
        'Área de Trabajo': document.getElementById('registerAreaTrabajo').value,
        'Posición': document.getElementById('registerPosicion').value,
        'Ubicación': document.getElementById('registerUbicacion').value,
        'Correo Electrónico': document.getElementById('registerEmail').value,
        'Teléfono': document.getElementById('registerPhone').value,
        'Tipo de Usuario': document.getElementById('registerTipoUsuario').value
      };
      
      // Generar HTML con los datos
      for (const [key, value] of Object.entries(formData)) {
        html += `
          <div class="detail-item">
            <div class="detail-label">${key}:</div>
            <div>${value || 'No especificado'}</div>
          </div>
        `;
      }
      
      confirmationDiv.innerHTML = html;
    }

    // ======================
    // FUNCIONALIDAD DE FIREBASE
    // ======================

    // Verificar permisos de administrador
    function checkAdminPermissions() {
      onAuthStateChanged(auth, async (user) => {
        if (user) {
          try {
            const userDoc = await getDoc(doc(db, "users", user.uid));
            if (!userDoc.exists() || userDoc.data().tipoUsuario !== "admin") {
              // Si no es admin, redirigir después de 3 segundos
              setTimeout(() => {
                window.location.href = "bienvenido.html";
              }, 3000);
            }
          } catch (error) {
            console.error("Error verificando permisos:", error);
          }
        } else {
          window.location.href = "index.html";
        }
      });
    }

    // Validar duplicados
    async function validateDuplicates(cedula, codigoLaboral, email) {
      try {
        const usersRef = collection(db, "users");
        const querySnapshot = await getDocs(usersRef);
        
        for (const doc of querySnapshot.docs) {
          const user = doc.data();
          if (user.cedula === cedula) {
            return { isDuplicate: true, field: "cédula" };
          }
          if (user.codigoLaboral === codigoLaboral) {
            return { isDuplicate: true, field: "código laboral" };
          }
          if (user.email === email) {
            return { isDuplicate: true, field: "correo electrónico" };
          }
        }
        
        return { isDuplicate: false };
      } catch (error) {
        console.error("Error validando duplicados:", error);
        throw error;
      }
    }

    // Registrar usuario
    async function registerUser() {
      // Mostrar overlay de carga
      document.getElementById('loadingOverlay').style.display = 'flex';
      
      // Obtener valores del formulario
      const name = document.getElementById('registerName').value.trim();
      const cedula = document.getElementById('registerCedula').value.trim();
      const codigoLaboral = document.getElementById('registerCodigoLaboral').value.trim();
      const empresa = document.getElementById('registerEmpresa').value.trim();
      const ubicacion = document.getElementById('registerUbicacion').value.trim();
      const sexo = document.getElementById('registerSexo').value;
      const email = document.getElementById('registerEmail').value.trim();
      const phone = document.getElementById('registerPhone').value.trim();
      const password = document.getElementById('registerPassword').value;
      const confirmPassword = document.getElementById('registerConfirmPassword').value;
      const departamento = document.getElementById('registerDepartamento').value.trim();
      const areaTrabajo = document.getElementById('registerAreaTrabajo').value.trim();
      const posicion = document.getElementById('registerPosicion').value.trim();
      const fechaNacimiento = document.getElementById('registerFechaNacimiento').value;
      const tipoUsuario = document.getElementById('registerTipoUsuario').value;
      const photoFile = document.getElementById('registerPhoto').files[0];

      try {
        // Validar contraseñas
        if (password !== confirmPassword) {
          throw new Error("Las contraseñas no coinciden");
        }

        // Validar duplicados
        const { isDuplicate, field } = await validateDuplicates(cedula, codigoLaboral, email);
        if (isDuplicate) {
          throw new Error(`El ${field} ya está registrado en el sistema`);
        }

        // Crear usuario en Firebase Auth
        const userCredential = await createUserWithEmailAndPassword(auth, email, password);
        const user = userCredential.user;

        // Subir foto si existe
        let photoURL = "";
        if (photoFile) {
          const photoRef = ref(storage, `profiles/${user.uid}/${photoFile.name}`);
          await uploadBytes(photoRef, photoFile);
          photoURL = await getDownloadURL(photoRef);
        }

        // Guardar datos adicionales en Firestore
        await setDoc(doc(db, "users", user.uid), {
          name,
          cedula,
          codigoLaboral,
          empresa,
          ubicacion,
          sexo,
          email,
          phone,
          departamento,
          areaTrabajo,
          posicion,
          fechaNacimiento,
          tipoUsuario,
          photoURL,
          createdAt: new Date().toISOString(),
          lastLogin: null,
          active: true
        });

        // Mostrar sección de éxito
        document.getElementById('loadingOverlay').style.display = 'none';
        showSuccessSection(user.uid);

      } catch (error) {
        document.getElementById('loadingOverlay').style.display = 'none';
        console.error("Error en registro:", error);
        alert(`Error al registrar: ${error.message}`);
      }
    }

    // Mostrar sección de éxito
    function showSuccessSection(userId) {
      // Ocultar todas las secciones excepto la de éxito
      document.querySelectorAll('.form-section').forEach(section => {
        section.style.display = 'none';
      });
      
      // Mostrar sección de éxito
      document.getElementById('section-5').style.display = 'block';
      
      // Redirigir automáticamente después de 5 segundos
      setTimeout(() => {
        window.location.href = "bienvenido.html";
      }, 5000);
    }

    // ======================
    // INICIALIZACIÓN
    // ======================

    document.addEventListener('DOMContentLoaded', () => {
      // Crear efectos de fondo
      createParticles();
      
      // Configurar navegación
      setupNavigation();
      
      // Configurar vista previa de imagen
      setupImagePreview();
      
      // Verificar permisos de administrador
      checkAdminPermissions();
      
      // Configurar evento para mostrar datos de confirmación
      document.querySelector('[data-next="4"]').addEventListener('click', showConfirmationData);
      
      // Configurar envío del formulario
      document.getElementById('submitForm').addEventListener('click', (e) => {
        e.preventDefault();
        registerUser();
      });
    });

  </script>
</body>
</html>
